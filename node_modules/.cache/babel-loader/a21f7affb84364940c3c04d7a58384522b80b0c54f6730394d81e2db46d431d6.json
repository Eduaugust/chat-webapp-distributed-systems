{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport ChatArea from '../../containers/ChatArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  api\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const {\n    send,\n    receivedMessages\n  } = useWebSocket([process.env.REACT_APP_API_URL1, process.env.REACT_APP_API_URL2]);\n  const [friends, setFriends] = useState();\n  const [messages, setMessages] = useState({});\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newMessageFriend, setNewMessageFriend] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      send('/getAll ' + isAuthenticated);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [send, navigate, isAuthenticated]);\n  const openNotificationWithIcon = useCallback((type, message, description) => {\n    api[type]({\n      message,\n      description\n    });\n  }, [api]);\n  const handleWebSocketMessage = useCallback(newMsg => {\n    console.log('Mensagem recebida33:', newMsg);\n    console.log('Mensagem recebida44:', newMsg.status);\n    if (newMsg.status === 'error') {\n      openNotificationWithIcon('error', 'Erro', newMsg.data);\n      return;\n    } else if (typeof newMsg.data === 'string') {\n      return;\n    }\n    try {\n      newMsg = newMsg.data;\n      setFriends(Object.keys(newMsg));\n      if (!selectedUser) {\n        return;\n      }\n      if (messages !== newMsg) {\n        for (const [friend, msgArray] of Object.entries(newMsg)) {\n          if (friend !== selectedUser && !!msgArray && !!messages[friend] && msgArray.length !== messages[friend].length && !newMessageFriend.includes(friend)) {\n            setNewMessageFriend([...newMessageFriend, friend]);\n          }\n        }\n      }\n      if (newMessageFriend.includes(selectedUser)) {\n        setNewMessageFriend(newMessageFriend.filter(friend => friend !== selectedUser));\n      }\n      setMessages(newMsg);\n    } catch (error) {\n      console.error('Erro ao analisar a mensagem:', error);\n    }\n  }, [selectedUser, openNotificationWithIcon, messages, newMessageFriend]);\n  useEffect(() => {\n    if (receivedMessages) {\n      handleWebSocketMessage(receivedMessages);\n    }\n  }, [receivedMessages, handleWebSocketMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      friends: friends,\n      newMessageFriend: newMessageFriend,\n      openNotificationWithIcon: openNotificationWithIcon,\n      selectedUser: selectedUser,\n      setSelectedUser: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), selectedUser && messages[selectedUser] ? /*#__PURE__*/_jsxDEV(ChatArea, {\n      messages: messages[selectedUser],\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl\",\n        children: \"Selecione um amigo para come\\xE7ar a conversar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"AKid78pSyBAeGWnhf02XWvFzEDU=\", false, function () {\n  return [useAuth, useNavigate, useWebSocket];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useWebSocket","useAuth","Sidebar","ChatArea","jsxDEV","_jsxDEV","Home","api","_s","isAuthenticated","navigate","send","receivedMessages","process","env","REACT_APP_API_URL1","REACT_APP_API_URL2","friends","setFriends","messages","setMessages","selectedUser","setSelectedUser","newMessageFriend","setNewMessageFriend","interval","setInterval","clearInterval","openNotificationWithIcon","type","message","description","handleWebSocketMessage","newMsg","console","log","status","data","Object","keys","friend","msgArray","entries","length","includes","filter","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { type NotificationInstance } from 'antd/es/notification/interface';\nimport { NotificationType } from '../../common/notificationType';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport ChatArea from '../../containers/ChatArea';\n\ninterface Message {\n  sender: string;\n  message: string;\n  timestamp: string;\n}\n\ninterface Messages {\n  [key: string]: Message[];\n}\n\nconst Home: React.FC<{ api: NotificationInstance }> = ({ api }) => {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const { send, receivedMessages } = useWebSocket([\n    process.env.REACT_APP_API_URL1 as string,\n    process.env.REACT_APP_API_URL2 as string\n  ]);\n  const [friends, setFriends] = useState<string[]>();\n  const [messages, setMessages] = useState<Messages>({});\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [newMessageFriend, setNewMessageFriend] = useState<string[]>([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      send('/getAll ' + isAuthenticated);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [send, navigate, isAuthenticated]);\n\n  const openNotificationWithIcon = useCallback(\n    (type: NotificationType, message: string, description: string) => {\n      api[type]({\n        message,\n        description,\n      });\n    },\n    [api]\n  );\n\n  const handleWebSocketMessage = useCallback(\n    (newMsg: any) => {\n        console.log('Mensagem recebida33:', newMsg);\n        console.log('Mensagem recebida44:', newMsg.status);\n      if (newMsg.status === 'error') {\n        openNotificationWithIcon('error', 'Erro', newMsg.data);\n        return;\n      } else if (typeof newMsg.data === 'string') {\n        return;\n      }\n\n      try {\n        newMsg = newMsg.data as Messages[];\n        setFriends(Object.keys(newMsg));\n        if (!selectedUser) {\n          return;\n        }\n        if (messages !== newMsg) {\n          for (const [friend, msgArray] of Object.entries(newMsg)) {\n            if (friend !== selectedUser && !!msgArray && !!messages[friend] && (msgArray as []).length !== messages[friend].length && !newMessageFriend.includes(friend)) {\n                setNewMessageFriend([...newMessageFriend, friend]);\n            }\n          }\n        }\n        if (newMessageFriend.includes(selectedUser)) {\n          setNewMessageFriend(newMessageFriend.filter((friend) => friend !== selectedUser));\n        }\n        setMessages(newMsg as Messages);\n      } catch (error) {\n        console.error('Erro ao analisar a mensagem:', error);\n      }\n    },\n    [selectedUser, openNotificationWithIcon, messages, newMessageFriend]\n  );\n\n  useEffect(() => {\n    if (receivedMessages) {\n      handleWebSocketMessage(receivedMessages);\n    }\n  }, [receivedMessages, handleWebSocketMessage]);\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar \n        friends={friends} \n        newMessageFriend={newMessageFriend}\n        openNotificationWithIcon={openNotificationWithIcon}\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n      />\n\n      {selectedUser && messages[selectedUser] ? (\n        <ChatArea messages={messages[selectedUser]} selectedUser={selectedUser} />\n      ) : (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <h1 className=\"text-2xl\">Selecione um amigo para come√ßar a conversar</h1>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,WAAW;AAGpC,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYjD,MAAMC,IAA6C,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM;IAAEC;EAAgB,CAAC,GAAGR,OAAO,CAAC,CAAC;EACrC,MAAMS,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,IAAI;IAAEC;EAAiB,CAAC,GAAGZ,YAAY,CAAC,CAC9Ca,OAAO,CAACC,GAAG,CAACC,kBAAkB,EAC9BF,OAAO,CAACC,GAAG,CAACE,kBAAkB,CAC/B,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAW,CAAC;EAClD,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAW,CAAC,CAAC,CAAC;EACtD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EACrE,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAW,EAAE,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACd,MAAM4B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAI,CAACjB,eAAe,EAAE;QACpBC,QAAQ,CAAC,GAAG,CAAC;MACf;MACAC,IAAI,CAAC,UAAU,GAAGF,eAAe,CAAC;IACpC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXkB,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACd,IAAI,EAAED,QAAQ,EAAED,eAAe,CAAC,CAAC;EAErC,MAAMmB,wBAAwB,GAAG9B,WAAW,CAC1C,CAAC+B,IAAsB,EAAEC,OAAe,EAAEC,WAAmB,KAAK;IAChExB,GAAG,CAACsB,IAAI,CAAC,CAAC;MACRC,OAAO;MACPC;IACF,CAAC,CAAC;EACJ,CAAC,EACD,CAACxB,GAAG,CACN,CAAC;EAED,MAAMyB,sBAAsB,GAAGlC,WAAW,CACvCmC,MAAW,IAAK;IACbC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAACG,MAAM,CAAC;IACpD,IAAIH,MAAM,CAACG,MAAM,KAAK,OAAO,EAAE;MAC7BR,wBAAwB,CAAC,OAAO,EAAE,MAAM,EAAEK,MAAM,CAACI,IAAI,CAAC;MACtD;IACF,CAAC,MAAM,IAAI,OAAOJ,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAE;MAC1C;IACF;IAEA,IAAI;MACFJ,MAAM,GAAGA,MAAM,CAACI,IAAkB;MAClCnB,UAAU,CAACoB,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC,CAAC;MAC/B,IAAI,CAACZ,YAAY,EAAE;QACjB;MACF;MACA,IAAIF,QAAQ,KAAKc,MAAM,EAAE;QACvB,KAAK,MAAM,CAACO,MAAM,EAAEC,QAAQ,CAAC,IAAIH,MAAM,CAACI,OAAO,CAACT,MAAM,CAAC,EAAE;UACvD,IAAIO,MAAM,KAAKnB,YAAY,IAAI,CAAC,CAACoB,QAAQ,IAAI,CAAC,CAACtB,QAAQ,CAACqB,MAAM,CAAC,IAAKC,QAAQ,CAAQE,MAAM,KAAKxB,QAAQ,CAACqB,MAAM,CAAC,CAACG,MAAM,IAAI,CAACpB,gBAAgB,CAACqB,QAAQ,CAACJ,MAAM,CAAC,EAAE;YAC1JhB,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAEiB,MAAM,CAAC,CAAC;UACtD;QACF;MACF;MACA,IAAIjB,gBAAgB,CAACqB,QAAQ,CAACvB,YAAY,CAAC,EAAE;QAC3CG,mBAAmB,CAACD,gBAAgB,CAACsB,MAAM,CAAEL,MAAM,IAAKA,MAAM,KAAKnB,YAAY,CAAC,CAAC;MACnF;MACAD,WAAW,CAACa,MAAkB,CAAC;IACjC,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC,EACD,CAACzB,YAAY,EAAEO,wBAAwB,EAAET,QAAQ,EAAEI,gBAAgB,CACrE,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd,IAAIe,gBAAgB,EAAE;MACpBoB,sBAAsB,CAACpB,gBAAgB,CAAC;IAC1C;EACF,CAAC,EAAE,CAACA,gBAAgB,EAAEoB,sBAAsB,CAAC,CAAC;EAE9C,oBACE3B,OAAA;IAAK0C,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B3C,OAAA,CAACH,OAAO;MACNe,OAAO,EAAEA,OAAQ;MACjBM,gBAAgB,EAAEA,gBAAiB;MACnCK,wBAAwB,EAAEA,wBAAyB;MACnDP,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA;IAAgB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAED/B,YAAY,IAAIF,QAAQ,CAACE,YAAY,CAAC,gBACrChB,OAAA,CAACF,QAAQ;MAACgB,QAAQ,EAAEA,QAAQ,CAACE,YAAY,CAAE;MAACA,YAAY,EAAEA;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1E/C,OAAA;MAAK0C,SAAS,EAAC,yCAAyC;MAAAC,QAAA,eACtD3C,OAAA;QAAI0C,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA/FIF,IAA6C;EAAA,QACrBL,OAAO,EAClBF,WAAW,EACOC,YAAY;AAAA;AAAAqD,EAAA,GAH3C/C,IAA6C;AAiGnD,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}