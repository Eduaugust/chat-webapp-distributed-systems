{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef(null);\n  const reconnectTimeout = useRef(null);\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => {\n      console.log('Conexão WebSocket aberta');\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n        reconnectTimeout.current = null;\n      }\n    };\n    ws.current.onmessage = event => {\n      const normalizedMessage = event.data.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      if (parsedMessage !== receivedMessages) setReceivedMessages(parsedMessage);\n    };\n    ws.current.onerror = error => {\n      console.error('Erro na conexão WebSocket:', error);\n    };\n    ws.current.onclose = () => {\n      console.log('Conexão WebSocket fechada');\n      if (!reconnectTimeout.current) {\n        reconnectTimeout.current = setTimeout(() => {\n          connectWebSocket();\n        }, 5000);\n      }\n    };\n  }, [url, receivedMessages]);\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket and clear timeout when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n    };\n  }, [connectWebSocket]);\n  const send = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n_s(useWebSocket, \"3DWj5syZ1dGP87YyXN2eAlJ2YLY=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebSocket","url","_s","receivedMessages","setReceivedMessages","ws","reconnectTimeout","connectWebSocket","current","close","WebSocket","onopen","console","log","clearTimeout","onmessage","event","normalizedMessage","data","replace","parsedMessage","JSON","parse","onerror","error","onclose","setTimeout","send","message","readyState","OPEN"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/api/index.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebSocket = (url: string) => {\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef<WebSocket | null>(null);\n  const reconnectTimeout = useRef<NodeJS.Timeout | null>(null);\n\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => {\n      console.log('Conexão WebSocket aberta');\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n        reconnectTimeout.current = null;\n      }\n    };\n\n    ws.current.onmessage = (event) => {\n      const normalizedMessage = event.data.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      if (parsedMessage !== receivedMessages)\n        setReceivedMessages(parsedMessage);\n    };\n\n    ws.current.onerror = (error) => {\n      console.error('Erro na conexão WebSocket:', error);\n    };\n\n    ws.current.onclose = () => {\n      console.log('Conexão WebSocket fechada');\n      if (!reconnectTimeout.current) {\n        reconnectTimeout.current = setTimeout(() => {\n          connectWebSocket();\n        }, 5000);\n      }\n    };\n  }, [url, receivedMessages]);\n\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket and clear timeout when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n    };\n  }, [connectWebSocket]);\n\n  const send = useCallback((message: string) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}