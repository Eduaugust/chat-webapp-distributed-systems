{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef(null);\n  const reconnectInterval = useRef(1000); // Intervalo inicial de reconexão em milissegundos\n\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => {\n      console.log('Conexão WebSocket aberta');\n      reconnectInterval.current = 1000; // Redefinir o intervalo de reconexão ao conectar com sucesso\n    };\n    ws.current.onmessage = event => {\n      const normalizedMessage = event.data.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      if (parsedMessage !== receivedMessages) setReceivedMessages(parsedMessage);\n    };\n    ws.current.onerror = error => {\n      console.error('Erro na conexão WebSocket:', error);\n    };\n    ws.current.onclose = () => {\n      console.log('Conexão WebSocket fechada');\n      setTimeout(() => {\n        connectWebSocket();\n        reconnectInterval.current = Math.min(reconnectInterval.current * 2, 30000); // Aumentar o intervalo até um máximo de 30 segundos\n      }, reconnectInterval.current);\n    };\n  }, [url, receivedMessages]);\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [connectWebSocket]);\n  const send = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n_s(useWebSocket, \"sedkjmpQIAmZBKhGqlf7tG7trg8=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebSocket","url","_s","receivedMessages","setReceivedMessages","ws","reconnectInterval","connectWebSocket","current","close","WebSocket","onopen","console","log","onmessage","event","normalizedMessage","data","replace","parsedMessage","JSON","parse","onerror","error","onclose","setTimeout","Math","min","send","message","readyState","OPEN"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/api/index.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebSocket = (url: string) => {\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef<WebSocket | null>(null);\n  const reconnectInterval = useRef<number>(1000); // Intervalo inicial de reconexão em milissegundos\n\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => {\n      console.log('Conexão WebSocket aberta');\n      reconnectInterval.current = 1000; // Redefinir o intervalo de reconexão ao conectar com sucesso\n    };\n\n    ws.current.onmessage = (event) => {\n      const normalizedMessage = event.data.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      if (parsedMessage !== receivedMessages)\n        setReceivedMessages(parsedMessage);\n    };\n\n    ws.current.onerror = (error) => {\n      console.error('Erro na conexão WebSocket:', error);\n    };\n\n    ws.current.onclose = () => {\n      console.log('Conexão WebSocket fechada');\n      setTimeout(() => {\n        connectWebSocket();\n        reconnectInterval.current = Math.min(reconnectInterval.current * 2, 30000); // Aumentar o intervalo até um máximo de 30 segundos\n      }, reconnectInterval.current);\n    };\n  }, [url, receivedMessages]);\n\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [connectWebSocket]);\n\n  const send = useCallback((message: string) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n\nexport default useWebSocket;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,YAAY,GAAIC,GAAW,IAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMS,EAAE,GAAGP,MAAM,CAAmB,IAAI,CAAC;EACzC,MAAMQ,iBAAiB,GAAGR,MAAM,CAAS,IAAI,CAAC,CAAC,CAAC;;EAEhD,MAAMS,gBAAgB,GAAGR,WAAW,CAAC,MAAM;IACzC,IAAIM,EAAE,CAACG,OAAO,EAAE;MACdH,EAAE,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;IACpB;IAEAJ,EAAE,CAACG,OAAO,GAAG,IAAIE,SAAS,CAACT,GAAG,CAAC;IAE/BI,EAAE,CAACG,OAAO,CAACG,MAAM,GAAG,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCP,iBAAiB,CAACE,OAAO,GAAG,IAAI,CAAC,CAAC;IACpC,CAAC;IAEDH,EAAE,CAACG,OAAO,CAACM,SAAS,GAAIC,KAAK,IAAK;MAChC,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,IAAI,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MACvD,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,iBAAiB,CAAC;MACnD,IAAIG,aAAa,KAAKhB,gBAAgB,EACpCC,mBAAmB,CAACe,aAAa,CAAC;IACtC,CAAC;IAEDd,EAAE,CAACG,OAAO,CAACc,OAAO,GAAIC,KAAK,IAAK;MAC9BX,OAAO,CAACW,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC;IAEDlB,EAAE,CAACG,OAAO,CAACgB,OAAO,GAAG,MAAM;MACzBZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCY,UAAU,CAAC,MAAM;QACflB,gBAAgB,CAAC,CAAC;QAClBD,iBAAiB,CAACE,OAAO,GAAGkB,IAAI,CAACC,GAAG,CAACrB,iBAAiB,CAACE,OAAO,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;MAC9E,CAAC,EAAEF,iBAAiB,CAACE,OAAO,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACP,GAAG,EAAEE,gBAAgB,CAAC,CAAC;EAE3BN,SAAS,CAAC,MAAM;IACdU,gBAAgB,CAAC,CAAC;;IAElB;IACA,OAAO,MAAM;MACX,IAAIF,EAAE,CAACG,OAAO,EAAE;QACdH,EAAE,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;MACpB;IACF,CAAC;EACH,CAAC,EAAE,CAACF,gBAAgB,CAAC,CAAC;EAEtB,MAAMqB,IAAI,GAAG7B,WAAW,CAAE8B,OAAe,IAAK;IAC5C,IAAIxB,EAAE,CAACG,OAAO,IAAIH,EAAE,CAACG,OAAO,CAACsB,UAAU,KAAKpB,SAAS,CAACqB,IAAI,EAAE;MAC1D1B,EAAE,CAACG,OAAO,CAACoB,IAAI,CAACC,OAAO,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMpB,KAAK,GAAGV,WAAW,CAAC,MAAM;IAC9B,IAAIM,EAAE,CAACG,OAAO,EAAE;MACdH,EAAE,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLN,gBAAgB;IAChByB,IAAI;IACJnB;EACF,CAAC;AACH,CAAC;AAACP,EAAA,CAjEIF,YAAY;AAmElB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}