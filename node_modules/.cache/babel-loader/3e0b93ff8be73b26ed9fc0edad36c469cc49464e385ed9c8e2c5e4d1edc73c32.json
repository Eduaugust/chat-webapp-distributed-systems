{"ast":null,"code":"import{useState,useEffect,useRef,useCallback}from'react';const useWebSocket=url=>{const[receivedMessages,setReceivedMessages]=useState({});const ws=useRef(null);const reconnectTimeout=useRef(null);const connectWebSocket=useCallback(()=>{if(ws.current){ws.current.close();}ws.current=new WebSocket(url);ws.current.onopen=()=>{if(reconnectTimeout.current){clearTimeout(reconnectTimeout.current);reconnectTimeout.current=null;}};ws.current.onmessage=event=>{try{const normalizedMessage=event.data.replace(/'/g,'\"');const parsedMessage=JSON.parse(normalizedMessage);if(parsedMessage!==receivedMessages)setReceivedMessages(parsedMessage);}catch(error){console.error('Error parsing message',error);}};ws.current.onerror=error=>{console.error('WebSocket error ');if(!reconnectTimeout.current){reconnectTimeout.current=setTimeout(()=>{connectWebSocket();},1000);}};ws.current.onclose=()=>{if(!reconnectTimeout.current){reconnectTimeout.current=setTimeout(()=>{connectWebSocket();},1000);}};},[url,receivedMessages]);useEffect(()=>{connectWebSocket();// Cleanup function to close the WebSocket and clear timeout when the component unmounts\nreturn()=>{if(ws.current){ws.current.close();}if(reconnectTimeout.current){clearTimeout(reconnectTimeout.current);}};},[connectWebSocket]);const close=useCallback(()=>{if(ws.current){ws.current.close();}},[]);const send=useCallback(message=>{if(ws.current&&ws.current.readyState===WebSocket.OPEN){ws.current.send(message);}},[]);const checkConnection=useCallback(()=>{if(ws.current&&ws.current.readyState===WebSocket.OPEN){return true;}return false;},[]);return{receivedMessages,send,close,connectWebSocket,checkConnection};};export default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebSocket","url","receivedMessages","setReceivedMessages","ws","reconnectTimeout","connectWebSocket","current","close","WebSocket","onopen","clearTimeout","onmessage","event","normalizedMessage","data","replace","parsedMessage","JSON","parse","error","console","onerror","setTimeout","onclose","send","message","readyState","OPEN","checkConnection"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/api/index.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebSocket = (url: string) => {\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef<WebSocket | null>(null);\n  const reconnectTimeout = useRef<NodeJS.Timeout | null>(null);\n\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => {\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n        reconnectTimeout.current = null;\n      }\n    };\n\n    ws.current.onmessage = (event) => {\n      try {\n        const normalizedMessage = event.data.replace(/'/g, '\"');\n        const parsedMessage = JSON.parse(normalizedMessage);\n        if (parsedMessage !== receivedMessages)\n          setReceivedMessages(parsedMessage);\n      }\n      catch (error) {\n        console.error('Error parsing message', error);\n      }\n    };\n\n    ws.current.onerror = (error) => {\n      console.error('WebSocket error ');\n      if (!reconnectTimeout.current) {\n        reconnectTimeout.current = setTimeout(() => {\n          connectWebSocket();\n        }, 1000);\n      }\n    };\n\n    ws.current.onclose = () => {\n      if (!reconnectTimeout.current) {\n        reconnectTimeout.current = setTimeout(() => {\n          connectWebSocket();\n        }, 1000);\n      }\n    };\n  }, [url, receivedMessages]);\n\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket and clear timeout when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n    };\n  }, [connectWebSocket]);\n\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n   \n  }, []);\n\n  const send = useCallback((message: string) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n\n  const checkConnection = useCallback(() => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      return true;\n    }\n    return false;\n  }, []);\n\n  \n\n  return {\n    receivedMessages,\n    send,\n    close,\n    connectWebSocket,\n    checkConnection\n  };\n};\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}