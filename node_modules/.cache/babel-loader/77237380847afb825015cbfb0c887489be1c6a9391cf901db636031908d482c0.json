{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/repos/chat/chat-webapp/src/components/WebSocketTest/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocketIOComponent() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Substitua 'http://localhost:8080' pelo endereço do seu servidor Socket.IO\n    const socket = io('http://localhost:8080');\n    socket.on('connect', () => {\n      console.log('Conexão Socket.IO aberta');\n      socket.emit('message', 'Mensagem inicial do cliente');\n    });\n    socket.on('message', message => {\n      console.log('Mensagem recebida:', message);\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    socket.on('connect_error', error => {\n      console.error('Erro na conexão Socket.IO:', error);\n    });\n\n    // Não é necessário um manipulador específico para fechar, a menos que você queira realizar ações específicas ao desconectar\n    socket.on('disconnect', () => {\n      console.log('Conexão Socket.IO fechada');\n    });\n    return () => {\n      socket.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mensagens Recebidas:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(SocketIOComponent, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = SocketIOComponent;\nexport default SocketIOComponent;\nvar _c;\n$RefreshReg$(_c, \"SocketIOComponent\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","SocketIOComponent","_s","messages","setMessages","socket","on","console","log","emit","message","prevMessages","error","close","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/components/WebSocketTest/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\n\nfunction SocketIOComponent() {\n  const [messages, setMessages] = useState<string[]>([]);\n\n  useEffect(() => {\n    // Substitua 'http://localhost:8080' pelo endereço do seu servidor Socket.IO\n    const socket = io('http://localhost:8080');\n\n    socket.on('connect', () => {\n      console.log('Conexão Socket.IO aberta');\n      socket.emit('message', 'Mensagem inicial do cliente');\n    });\n\n    socket.on('message', (message) => {\n      console.log('Mensagem recebida:', message);\n      setMessages((prevMessages) => [...prevMessages, message]);\n    });\n\n    socket.on('connect_error', (error) => {\n      console.error('Erro na conexão Socket.IO:', error);\n    });\n\n    // Não é necessário um manipulador específico para fechar, a menos que você queira realizar ações específicas ao desconectar\n    socket.on('disconnect', () => {\n      console.log('Conexão Socket.IO fechada');\n    });\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Mensagens Recebidas:</h2>\n      <ul>\n        {messages.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default SocketIOComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAW,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAGP,EAAE,CAAC,uBAAuB,CAAC;IAE1CO,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvCH,MAAM,CAACI,IAAI,CAAC,SAAS,EAAE,6BAA6B,CAAC;IACvD,CAAC,CAAC;IAEFJ,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGI,OAAO,IAAK;MAChCH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,OAAO,CAAC;MAC1CN,WAAW,CAAEO,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEFL,MAAM,CAACC,EAAE,CAAC,eAAe,EAAGM,KAAK,IAAK;MACpCL,OAAO,CAACK,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;;IAEF;IACAP,MAAM,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC;IAEF,OAAO,MAAM;MACXH,MAAM,CAACQ,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,kBAC3BpB,OAAA;QAAAc,QAAA,EAAiBJ;MAAO,GAAfU,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAzCQD,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AA2C1B,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}