{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useWebSocket = urls => {\n  _s();\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef(null);\n  const reconnectTimeout = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const currentUrlIndex = useRef(0);\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n    const url = urls[currentUrlIndex.current];\n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => {\n      console.log(`Conexão WebSocket aberta em ${url}`);\n      reconnectAttempts.current = 0; // Reset reconnection attempts on successful connection\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n        reconnectTimeout.current = null;\n      }\n    };\n    ws.current.onmessage = event => {\n      const normalizedMessage = event.data.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      if (parsedMessage !== receivedMessages) {\n        setReceivedMessages(parsedMessage);\n      }\n    };\n    ws.current.onerror = error => {\n      // console.error(`Erro na conexão WebSocket em ${url}:`, error);\n    };\n    ws.current.onclose = () => {\n      // console.log(`Conexão WebSocket fechada em ${url}`);\n      if (!reconnectTimeout.current) {\n        // Exponential backoff reconnection\n        const delay = Math.min(5000 * Math.pow(2, reconnectAttempts.current), 30000); // Max 30 seconds delay\n        reconnectAttempts.current += 1; // Increment attempts\n\n        // Try the next URL in the list if available\n        currentUrlIndex.current = (currentUrlIndex.current + 1) % urls.length;\n        reconnectTimeout.current = setTimeout(() => {\n          connectWebSocket();\n        }, delay);\n      }\n    };\n  }, [urls, receivedMessages]);\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket and clear timeout when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n    };\n  }, [connectWebSocket]);\n  const send = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n      console.log(`Mensagem enviada: ${message}`);\n      console.log(\"Para o endereço de WebSocket:\", urls[currentUrlIndex.current]);\n    }\n  }, []);\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n_s(useWebSocket, \"MnHWFZuGQ4rdXbZue46QiFyk0f4=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebSocket","urls","_s","receivedMessages","setReceivedMessages","ws","reconnectTimeout","reconnectAttempts","currentUrlIndex","connectWebSocket","current","close","url","WebSocket","onopen","console","log","clearTimeout","onmessage","event","normalizedMessage","data","replace","parsedMessage","JSON","parse","onerror","error","onclose","delay","Math","min","pow","length","setTimeout","send","message","readyState","OPEN"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/api/index.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebSocket = (urls: string[]) => {\n  const [receivedMessages, setReceivedMessages] = useState({});\n  const ws = useRef<WebSocket | null>(null);\n  const reconnectTimeout = useRef<NodeJS.Timeout | null>(null);\n  const reconnectAttempts = useRef(0);\n  const currentUrlIndex = useRef(0);\n\n  const connectWebSocket = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n\n    const url = urls[currentUrlIndex.current];\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => {\n      console.log(`Conexão WebSocket aberta em ${url}`);\n      reconnectAttempts.current = 0; // Reset reconnection attempts on successful connection\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n        reconnectTimeout.current = null;\n      }\n    };\n\n    ws.current.onmessage = (event) => {\n      const normalizedMessage = event.data.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      if (parsedMessage !== receivedMessages) {\n        setReceivedMessages(parsedMessage);\n      }\n    };\n\n    ws.current.onerror = (error) => {\n      // console.error(`Erro na conexão WebSocket em ${url}:`, error);\n    };\n\n    ws.current.onclose = () => {\n      // console.log(`Conexão WebSocket fechada em ${url}`);\n      if (!reconnectTimeout.current) {\n        // Exponential backoff reconnection\n        const delay = Math.min(5000 * Math.pow(2, reconnectAttempts.current), 30000); // Max 30 seconds delay\n        reconnectAttempts.current += 1; // Increment attempts\n\n        // Try the next URL in the list if available\n        currentUrlIndex.current = (currentUrlIndex.current + 1) % urls.length;\n\n        reconnectTimeout.current = setTimeout(() => {\n          connectWebSocket();\n        }, delay);\n      }\n    };\n  }, [urls, receivedMessages]);\n\n  useEffect(() => {\n    connectWebSocket();\n\n    // Cleanup function to close the WebSocket and clear timeout when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n    };\n  }, [connectWebSocket]);\n\n  const send = useCallback((message: string) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n      console.log(`Mensagem enviada: ${message}`);\n      console.log(\"Para o endereço de WebSocket:\", urls[currentUrlIndex.current]);\n    }\n  }, []);\n\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n\nexport default useWebSocket;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}