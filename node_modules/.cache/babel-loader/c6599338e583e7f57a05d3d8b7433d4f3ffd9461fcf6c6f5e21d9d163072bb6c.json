{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useNavigate}from'react-router-dom';import useWebSocket from'../../api';import{useAuth}from'../../contexts/AuthContext';import Sidebar from'../../containers/SideBar';import ChatArea from'../../containers/ChatArea';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=_ref=>{let{api}=_ref;const{isAuthenticated,isServersConnected,setConnect}=useAuth();const navigate=useNavigate();const webScoket1=useWebSocket(process.env.REACT_APP_API_URL1);const webScoket2=useWebSocket(process.env.REACT_APP_API_URL2);const[friends,setFriends]=useState();const[messages,setMessages]=useState({});const[selectedUser,setSelectedUser]=useState(null);const[newMessageFriend,setNewMessageFriend]=useState([]);useEffect(()=>{const interval=setInterval(()=>{if(!isAuthenticated){navigate('/');}if(!webScoket1.checkConnection()){webScoket1.connectWebSocket();}if(!webScoket2.checkConnection()){webScoket2.connectWebSocket();}if(!webScoket1.checkConnection()&&!webScoket2.checkConnection()&&isServersConnected){setConnect(false);}else if((webScoket1.checkConnection()||webScoket2.checkConnection())&&!isServersConnected){setConnect(true);}webScoket1.send('/getAll '+isAuthenticated);webScoket2.send('/getAll '+isAuthenticated);},1000);return()=>{clearInterval(interval);};},[webScoket1,webScoket2,navigate,isAuthenticated,isServersConnected,setConnect]);const openNotificationWithIcon=useCallback((type,message,description)=>{api[type]({message,description});},[api]);const handleWebSocketMessage=useCallback(newMsg=>{if(newMsg.status==='error'){openNotificationWithIcon('error','Erro',newMsg.data);return;}else if(typeof newMsg.data==='string'){return;}try{newMsg=newMsg.data;setFriends(Object.keys(newMsg));if(!selectedUser){return;}if(messages!==newMsg){for(const[friend,msgArray]of Object.entries(newMsg)){if(friend!==selectedUser&&!!msgArray&&!!messages[friend]&&msgArray.length!==messages[friend].length&&!newMessageFriend.includes(friend)){setNewMessageFriend([...newMessageFriend,friend]);}}}if(newMessageFriend.includes(selectedUser)){setNewMessageFriend(newMessageFriend.filter(friend=>friend!==selectedUser));}if(newMsg===undefined||newMsg===null){return;}setMessages(newMsg);}catch(error){}},[selectedUser,openNotificationWithIcon,messages,newMessageFriend]);useEffect(()=>{if(webScoket1.receivedMessages){handleWebSocketMessage(webScoket1.receivedMessages);}},[webScoket1.receivedMessages,handleWebSocketMessage]);useEffect(()=>{if(webScoket2.receivedMessages){handleWebSocketMessage(webScoket2.receivedMessages);}},[webScoket2.receivedMessages,handleWebSocketMessage]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-screen\",children:[/*#__PURE__*/_jsx(Sidebar,{friends:friends,newMessageFriend:newMessageFriend,openNotificationWithIcon:openNotificationWithIcon,selectedUser:selectedUser,setSelectedUser:setSelectedUser}),selectedUser&&messages[selectedUser]?/*#__PURE__*/_jsx(ChatArea,{api:api,selectedUser:selectedUser}):/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl\",children:\"Selecione um amigo para come\\xE7ar a conversar\"})})]});};export default Home;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useWebSocket","useAuth","Sidebar","ChatArea","jsx","_jsx","jsxs","_jsxs","Home","_ref","api","isAuthenticated","isServersConnected","setConnect","navigate","webScoket1","process","env","REACT_APP_API_URL1","webScoket2","REACT_APP_API_URL2","friends","setFriends","messages","setMessages","selectedUser","setSelectedUser","newMessageFriend","setNewMessageFriend","interval","setInterval","checkConnection","connectWebSocket","send","clearInterval","openNotificationWithIcon","type","message","description","handleWebSocketMessage","newMsg","status","data","Object","keys","friend","msgArray","entries","length","includes","filter","undefined","error","receivedMessages","className","children"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { type NotificationInstance } from 'antd/es/notification/interface';\nimport { NotificationType } from '../../common/notificationType';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport ChatArea from '../../containers/ChatArea';\n\ninterface Message {\n  sender: string;\n  message: string;\n  timestamp: string;\n}\n\ninterface Messages {\n  [key: string]: Message[];\n}\n\nconst Home: React.FC<{ api: NotificationInstance }> = ({ api }) => {\n  const { isAuthenticated, isServersConnected, setConnect } = useAuth();\n  const navigate = useNavigate();\n\n    const webScoket1= useWebSocket( process.env.REACT_APP_API_URL1 as string);\n  const webScoket2 = useWebSocket( process.env.REACT_APP_API_URL2 as string);\n\n  const [friends, setFriends] = useState<string[]>();\n  const [messages, setMessages] = useState<Messages>({});\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [newMessageFriend, setNewMessageFriend] = useState<string[]>([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      if (!webScoket1.checkConnection()){\n        webScoket1.connectWebSocket();\n      }\n      if (!webScoket2.checkConnection()){\n        webScoket2.connectWebSocket();\n      }\n\n      if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n        setConnect(false);\n      } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n        setConnect(true)\n      }\n      webScoket1.send('/getAll ' + isAuthenticated);\n      webScoket2.send('/getAll ' + isAuthenticated);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [webScoket1, webScoket2, navigate, isAuthenticated, isServersConnected, setConnect]);\n\n  const openNotificationWithIcon = useCallback(\n    (type: NotificationType, message: string, description: string) => {\n      api[type]({\n        message,\n        description,\n      });\n    },\n    [api]\n  );\n\n  const handleWebSocketMessage = useCallback(\n    (newMsg: any) => {\n      if (newMsg.status === 'error') {\n        openNotificationWithIcon('error', 'Erro', newMsg.data);\n        return;\n      } else if (typeof newMsg.data === 'string') {\n        return;\n      }\n\n      try {\n        newMsg = newMsg.data as Messages[];\n        setFriends(Object.keys(newMsg));\n        if (!selectedUser) {\n          return;\n        }\n        if (messages !== newMsg) {\n          for (const [friend, msgArray] of Object.entries(newMsg)) {\n            if (friend !== selectedUser && !!msgArray && !!messages[friend] && (msgArray as []).length !== messages[friend].length && !newMessageFriend.includes(friend)) {\n                setNewMessageFriend([...newMessageFriend, friend]);\n            }\n          }\n        }\n        if (newMessageFriend.includes(selectedUser)) {\n          setNewMessageFriend(newMessageFriend.filter((friend) => friend !== selectedUser));\n        }\n        if (newMsg === undefined || newMsg === null) {\n          return;\n        }\n        setMessages(newMsg as Messages);\n      } catch (error) {\n      }\n    },\n    [selectedUser, openNotificationWithIcon, messages, newMessageFriend]\n  );\n\n  useEffect(() => {\n    if (webScoket1.receivedMessages) {\n      handleWebSocketMessage(webScoket1.receivedMessages);\n    }\n  }, [webScoket1.receivedMessages, handleWebSocketMessage]);\n\n  useEffect(() => {\n    if (webScoket2.receivedMessages) {\n      handleWebSocketMessage(webScoket2.receivedMessages);\n    }\n  }, [webScoket2.receivedMessages, handleWebSocketMessage]);\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar \n        friends={friends} \n        newMessageFriend={newMessageFriend}\n        openNotificationWithIcon={openNotificationWithIcon}\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n      />\n\n      {selectedUser && messages[selectedUser] ? (\n        <ChatArea api={api} selectedUser={selectedUser} />\n      ) : (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <h1 className=\"text-2xl\">Selecione um amigo para come√ßar a conversar</h1>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}