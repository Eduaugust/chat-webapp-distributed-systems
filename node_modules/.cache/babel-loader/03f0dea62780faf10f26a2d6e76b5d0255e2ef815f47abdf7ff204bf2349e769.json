{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [receivedMessages, setReceivedMessages] = useState('');\n  const ws = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket(url);\n    ws.current.onopen = () => {\n      console.log('Conexão WebSocket aberta');\n    };\n    ws.current.onmessage = event => {\n      // console.log('Mensagem recebida:', event.data);\n      setReceivedMessages(event.data);\n    };\n    ws.current.onerror = error => {\n      console.error('Erro na conexão WebSocket:', error);\n    };\n    ws.current.onclose = () => {\n      console.log('Conexão WebSocket fechada');\n    };\n\n    // Cleanup function to close the WebSocket when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [url]);\n  const send = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n_s(useWebSocket, \"kZwXAn35aLHxCELcuirKkIjH1YI=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useWebSocket","url","_s","receivedMessages","setReceivedMessages","ws","current","WebSocket","onopen","console","log","onmessage","event","data","onerror","error","onclose","close","send","message","readyState","OPEN"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/api/index.tsx"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nconst useWebSocket = (url: string) => {\n  const [receivedMessages, setReceivedMessages] = useState('');\n  const ws = useRef<WebSocket | null>(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(url);\n\n    ws.current.onopen = () => {\n      console.log('Conexão WebSocket aberta');\n    };\n\n    ws.current.onmessage = (event) => {\n      // console.log('Mensagem recebida:', event.data);\n      setReceivedMessages(event.data);\n    };\n\n    ws.current.onerror = (error) => {\n      console.error('Erro na conexão WebSocket:', error);\n    };\n\n    ws.current.onclose = () => {\n      console.log('Conexão WebSocket fechada');\n    };\n\n    // Cleanup function to close the WebSocket when the component unmounts\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, [url]);\n\n  const send = useCallback((message: string) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(message);\n    }\n  }, []);\n\n  const close = useCallback(() => {\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n\n  return {\n    receivedMessages,\n    send,\n    close\n  };\n};\n\nexport default useWebSocket;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEhE,MAAMC,YAAY,GAAIC,GAAW,IAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMS,EAAE,GAAGP,MAAM,CAAmB,IAAI,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACdQ,EAAE,CAACC,OAAO,GAAG,IAAIC,SAAS,CAACN,GAAG,CAAC;IAE/BI,EAAE,CAACC,OAAO,CAACE,MAAM,GAAG,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC;IAEDL,EAAE,CAACC,OAAO,CAACK,SAAS,GAAIC,KAAK,IAAK;MAChC;MACAR,mBAAmB,CAACQ,KAAK,CAACC,IAAI,CAAC;IACjC,CAAC;IAEDR,EAAE,CAACC,OAAO,CAACQ,OAAO,GAAIC,KAAK,IAAK;MAC9BN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC;IAEDV,EAAE,CAACC,OAAO,CAACU,OAAO,GAAG,MAAM;MACzBP,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC;;IAED;IACA,OAAO,MAAM;MACX,IAAIL,EAAE,CAACC,OAAO,EAAE;QACdD,EAAE,CAACC,OAAO,CAACW,KAAK,CAAC,CAAC;MACpB;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,GAAG,CAAC,CAAC;EAET,MAAMiB,IAAI,GAAGnB,WAAW,CAAEoB,OAAe,IAAK;IAC5C,IAAId,EAAE,CAACC,OAAO,IAAID,EAAE,CAACC,OAAO,CAACc,UAAU,KAAKb,SAAS,CAACc,IAAI,EAAE;MAC1DhB,EAAE,CAACC,OAAO,CAACY,IAAI,CAACC,OAAO,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,KAAK,GAAGlB,WAAW,CAAC,MAAM;IAC9B,IAAIM,EAAE,CAACC,OAAO,EAAE;MACdD,EAAE,CAACC,OAAO,CAACW,KAAK,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLd,gBAAgB;IAChBe,IAAI;IACJD;EACF,CAAC;AACH,CAAC;AAACf,EAAA,CAjDIF,YAAY;AAmDlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}