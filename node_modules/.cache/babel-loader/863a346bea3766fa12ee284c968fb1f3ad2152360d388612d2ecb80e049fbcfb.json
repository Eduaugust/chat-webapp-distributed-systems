{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport ChatArea from '../../containers/ChatArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  api\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isServersConnected,\n    setConnect\n  } = useAuth();\n  const navigate = useNavigate();\n  const webScoket1 = useWebSocket(process.env.REACT_APP_API_URL1);\n  const webScoket2 = useWebSocket(process.env.REACT_APP_API_URL2);\n  const [friends, setFriends] = useState();\n  const [messages, setMessages] = useState({});\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newMessageFriend, setNewMessageFriend] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      if (!webScoket1.checkConnection()) {\n        webScoket1.connectWebSocket();\n      }\n      if (!webScoket2.checkConnection()) {\n        webScoket2.connectWebSocket();\n      }\n      if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n        setConnect(false);\n      } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n        setConnect(true);\n      }\n      webScoket1.send('/getAll ' + isAuthenticated);\n      webScoket2.send('/getAll ' + isAuthenticated);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [webScoket1, webScoket2, navigate, isAuthenticated, isServersConnected, setConnect]);\n  const openNotificationWithIcon = useCallback((type, message, description) => {\n    api[type]({\n      message,\n      description\n    });\n  }, [api]);\n  const handleWebSocketMessage = useCallback(newMsg => {\n    if (newMsg.status === 'error') {\n      openNotificationWithIcon('error', 'Erro', newMsg.data);\n      return;\n    } else if (typeof newMsg.data === 'string') {\n      return;\n    }\n    try {\n      newMsg = newMsg.data;\n      setFriends(Object.keys(newMsg));\n      if (!selectedUser) {\n        return;\n      }\n      if (messages !== newMsg) {\n        for (const [friend, msgArray] of Object.entries(newMsg)) {\n          if (friend !== selectedUser && !!msgArray && !!messages[friend] && msgArray.length !== messages[friend].length && !newMessageFriend.includes(friend)) {\n            setNewMessageFriend([...newMessageFriend, friend]);\n          }\n        }\n      }\n      if (newMessageFriend.includes(selectedUser)) {\n        setNewMessageFriend(newMessageFriend.filter(friend => friend !== selectedUser));\n      }\n      if (newMsg === undefined || newMsg === null) {\n        return;\n      }\n      setMessages(newMsg);\n    } catch (error) {}\n  }, [selectedUser, openNotificationWithIcon, messages, newMessageFriend]);\n  useEffect(() => {\n    if (webScoket1.receivedMessages) {\n      handleWebSocketMessage(webScoket1.receivedMessages);\n    }\n  }, [webScoket1.receivedMessages, handleWebSocketMessage]);\n  useEffect(() => {\n    if (webScoket2.receivedMessages) {\n      handleWebSocketMessage(webScoket2.receivedMessages);\n    }\n  }, [webScoket2.receivedMessages, handleWebSocketMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      friends: friends,\n      newMessageFriend: newMessageFriend,\n      openNotificationWithIcon: openNotificationWithIcon,\n      selectedUser: selectedUser,\n      setSelectedUser: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), selectedUser && messages[selectedUser] ? /*#__PURE__*/_jsxDEV(ChatArea, {\n      api: api,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl\",\n        children: \"Selecione um amigo para come\\xE7ar a conversar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"6glZvJCyKrIGK+q1QUbpekWKm8w=\", false, function () {\n  return [useAuth, useNavigate, useWebSocket, useWebSocket];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useWebSocket","useAuth","Sidebar","ChatArea","jsxDEV","_jsxDEV","Home","api","_s","isAuthenticated","isServersConnected","setConnect","navigate","webScoket1","process","env","REACT_APP_API_URL1","webScoket2","REACT_APP_API_URL2","friends","setFriends","messages","setMessages","selectedUser","setSelectedUser","newMessageFriend","setNewMessageFriend","interval","setInterval","checkConnection","connectWebSocket","send","clearInterval","openNotificationWithIcon","type","message","description","handleWebSocketMessage","newMsg","status","data","Object","keys","friend","msgArray","entries","length","includes","filter","undefined","error","receivedMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { type NotificationInstance } from 'antd/es/notification/interface';\nimport { NotificationType } from '../../common/notificationType';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport ChatArea from '../../containers/ChatArea';\n\ninterface Message {\n  sender: string;\n  message: string;\n  timestamp: string;\n}\n\ninterface Messages {\n  [key: string]: Message[];\n}\n\nconst Home: React.FC<{ api: NotificationInstance }> = ({ api }) => {\n  const { isAuthenticated, isServersConnected, setConnect } = useAuth();\n  const navigate = useNavigate();\n\n    const webScoket1= useWebSocket( process.env.REACT_APP_API_URL1 as string);\n  const webScoket2 = useWebSocket( process.env.REACT_APP_API_URL2 as string);\n\n  const [friends, setFriends] = useState<string[]>();\n  const [messages, setMessages] = useState<Messages>({});\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [newMessageFriend, setNewMessageFriend] = useState<string[]>([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      if (!webScoket1.checkConnection()){\n        webScoket1.connectWebSocket();\n      }\n      if (!webScoket2.checkConnection()){\n        webScoket2.connectWebSocket();\n      }\n\n      if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n        setConnect(false);\n      } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n        setConnect(true)\n      }\n      webScoket1.send('/getAll ' + isAuthenticated);\n      webScoket2.send('/getAll ' + isAuthenticated);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [webScoket1, webScoket2, navigate, isAuthenticated, isServersConnected, setConnect]);\n\n  const openNotificationWithIcon = useCallback(\n    (type: NotificationType, message: string, description: string) => {\n      api[type]({\n        message,\n        description,\n      });\n    },\n    [api]\n  );\n\n  const handleWebSocketMessage = useCallback(\n    (newMsg: any) => {\n      if (newMsg.status === 'error') {\n        openNotificationWithIcon('error', 'Erro', newMsg.data);\n        return;\n      } else if (typeof newMsg.data === 'string') {\n        return;\n      }\n\n      try {\n        newMsg = newMsg.data as Messages[];\n        setFriends(Object.keys(newMsg));\n        if (!selectedUser) {\n          return;\n        }\n        if (messages !== newMsg) {\n          for (const [friend, msgArray] of Object.entries(newMsg)) {\n            if (friend !== selectedUser && !!msgArray && !!messages[friend] && (msgArray as []).length !== messages[friend].length && !newMessageFriend.includes(friend)) {\n                setNewMessageFriend([...newMessageFriend, friend]);\n            }\n          }\n        }\n        if (newMessageFriend.includes(selectedUser)) {\n          setNewMessageFriend(newMessageFriend.filter((friend) => friend !== selectedUser));\n        }\n        if (newMsg === undefined || newMsg === null) {\n          return;\n        }\n        setMessages(newMsg as Messages);\n      } catch (error) {\n      }\n    },\n    [selectedUser, openNotificationWithIcon, messages, newMessageFriend]\n  );\n\n  useEffect(() => {\n    if (webScoket1.receivedMessages) {\n      handleWebSocketMessage(webScoket1.receivedMessages);\n    }\n  }, [webScoket1.receivedMessages, handleWebSocketMessage]);\n\n  useEffect(() => {\n    if (webScoket2.receivedMessages) {\n      handleWebSocketMessage(webScoket2.receivedMessages);\n    }\n  }, [webScoket2.receivedMessages, handleWebSocketMessage]);\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar \n        friends={friends} \n        newMessageFriend={newMessageFriend}\n        openNotificationWithIcon={openNotificationWithIcon}\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n      />\n\n      {selectedUser && messages[selectedUser] ? (\n        <ChatArea api={api} selectedUser={selectedUser} />\n      ) : (\n        <div className=\"flex-1 flex items-center justify-center\">\n          <h1 className=\"text-2xl\">Selecione um amigo para começar a conversar</h1>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}