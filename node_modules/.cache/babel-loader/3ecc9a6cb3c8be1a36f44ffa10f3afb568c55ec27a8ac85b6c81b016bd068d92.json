{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport ChatArea from '../../containers/ChatArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  api\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const {\n    send,\n    receivedMessages\n  } = useWebSocket('ws://localhost:8080');\n  const [friends, setFriends] = useState();\n  const [messages, setMessages] = useState();\n  const [selectedUser, setSelectedUser] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      send('/getAll ' + isAuthenticated);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [send, navigate, isAuthenticated]);\n  const openNotificationWithIcon = useCallback((type, message, description) => {\n    api[type]({\n      message,\n      description\n    });\n  }, [api]);\n  const handleWebSocketMessage = useCallback(message => {\n    if (message === 'error') {\n      openNotificationWithIcon('error', 'Erro', 'Erro ao adicionar amigo.');\n      return;\n    } else if (message === 'success') {\n      return;\n    }\n    try {\n      const normalizedMessage = message.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n      setFriends(Object.keys(parsedMessage));\n      console.log('parsedMessage', selectedUser ? parsedMessage[selectedUser] : 'kkk ferouuu');\n      if (!selectedUser) {\n        return;\n      }\n      const newMessage = [];\n      for (const message of parsedMessage[selectedUser]) {\n        newMessage.push({\n          sender: message.sender,\n          message: message.message,\n          timestamp: message.timestamp\n        });\n      }\n      setMessages(newMessage);\n    } catch (error) {\n      console.error('Erro ao analisar a mensagem:', error);\n    }\n  }, [selectedUser, openNotificationWithIcon]);\n  useEffect(() => {\n    if (receivedMessages) {\n      handleWebSocketMessage(receivedMessages);\n    }\n  }, [receivedMessages, handleWebSocketMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      friends: friends,\n      newMessageFriend: [],\n      openNotificationWithIcon: openNotificationWithIcon,\n      selectedUser: selectedUser,\n      setSelectedUser: setSelectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), messages && selectedUser ? /*#__PURE__*/_jsxDEV(ChatArea, {\n      messages: messages,\n      selectedUser: selectedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl\",\n        children: \"Selecione um amigo para come\\xE7ar a conversar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GCh18Ax5ClP7kVCNJ2HAqW856gA=\", false, function () {\n  return [useAuth, useNavigate, useWebSocket];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useWebSocket","useAuth","Sidebar","ChatArea","jsxDEV","_jsxDEV","Home","api","_s","isAuthenticated","navigate","send","receivedMessages","friends","setFriends","messages","setMessages","selectedUser","setSelectedUser","interval","setInterval","clearInterval","openNotificationWithIcon","type","message","description","handleWebSocketMessage","normalizedMessage","replace","parsedMessage","JSON","parse","Object","keys","console","log","newMessage","push","sender","timestamp","error","className","children","newMessageFriend","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { type NotificationInstance } from 'antd/es/notification/interface';\nimport { NotificationType } from '../../common/notificationType';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Sidebar from '../../containers/SideBar';\nimport { format, isToday, isYesterday, parseISO } from 'date-fns';\nimport ChatArea from '../../containers/ChatArea';\n\ninterface Message {\n  sender: string;\n  message: string;\n  timestamp: string;\n}\n\nconst Home: React.FC<{ api: NotificationInstance }> = ({ api }) => {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const { send, receivedMessages } = useWebSocket('ws://localhost:8080');\n  const [friends, setFriends] = useState<string[]>()\n  const [messages, setMessages] = useState<Message[]>();\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      send('/getAll ' + isAuthenticated);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [send, navigate, isAuthenticated]);\n\n  const openNotificationWithIcon = useCallback(\n    (type: NotificationType, message: string, description: string) => {\n      api[type]({\n        message,\n        description,\n      });\n    },\n    [api]\n  );\n\n  const handleWebSocketMessage = useCallback(\n    (message: string) => {\n\n      if (message === 'error') {\n        openNotificationWithIcon('error', 'Erro', 'Erro ao adicionar amigo.');\n        return;\n      } else if (message === 'success') {\n        return;\n      }\n    \n    try {\n      const normalizedMessage = message.replace(/'/g, '\"');\n      const parsedMessage = JSON.parse(normalizedMessage);\n\n      setFriends(Object.keys(parsedMessage));\n      console.log('parsedMessage', selectedUser ? parsedMessage[selectedUser] : 'kkk ferouuu');\n      if (!selectedUser) {\n        return;\n      }\n      const newMessage: Message[] = [];\n      for (const message of parsedMessage[selectedUser]) {\n        newMessage.push({\n          sender: message.sender,\n          message: message.message,\n          timestamp: message.timestamp,\n        });\n      }\n      setMessages(newMessage);\n    } catch (error) {\n      console.error('Erro ao analisar a mensagem:', error);\n    }\n    },\n    [selectedUser, openNotificationWithIcon]\n  );\n\n  useEffect(() => {\n    if (receivedMessages) {\n      handleWebSocketMessage(receivedMessages);\n    }\n  }, [receivedMessages, handleWebSocketMessage]);\n\n  return (\n    <div className=\"flex h-screen\">\n      {/* Sidebar */}\n      <Sidebar \n        friends={friends} \n        newMessageFriend={[]}\n        openNotificationWithIcon={openNotificationWithIcon}\n        selectedUser={selectedUser}\n        setSelectedUser={setSelectedUser}\n        />\n\n      {/* Main Chat Area */}\n      {messages && selectedUser \n      ?\n        <ChatArea messages={messages} selectedUser={selectedUser} />\n        :\n        <div className=\"flex-1 flex items-center justify-center\">\n          <h1 className=\"text-2xl\">Selecione um amigo para come√ßar a conversar</h1>\n        </div>\n      }\n      \n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}