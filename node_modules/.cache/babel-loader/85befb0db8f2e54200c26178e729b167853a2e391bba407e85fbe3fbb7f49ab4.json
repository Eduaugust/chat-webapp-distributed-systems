{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/repos/chat/chat-webapp/src/containers/ChatArea/index.tsx\",\n  _s = $RefreshSig$();\nimport { format, isToday, isYesterday, parseISO } from 'date-fns';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Controller, useForm } from 'react-hook-form';\nimport useWebSocket from '../../api';\nimport { Col, Row } from 'antd';\nimport emojiRegex from 'emoji-regex';\nimport EmojiPicker from 'emoji-picker-react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatArea = ({\n  selectedUser,\n  api\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isServersConnected,\n    setConnect\n  } = useAuth();\n  const {\n    control,\n    handleSubmit,\n    reset,\n    watch,\n    setValue\n  } = useForm();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const webScoket1 = useWebSocket(process.env.REACT_APP_API_URL1);\n  const webScoket2 = useWebSocket(process.env.REACT_APP_API_URL2);\n  const messagesEndRef = useRef(null);\n  const [isScrolledUp, setIsScrolledUp] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const msgToSend = watch(\"msgToSend\", \"\");\n\n  // Limita o tamanho da mensagem e envia\n  const handleSendMessage = data => {\n    const maxLength = 85;\n    const message = data.msgToSend.slice(0, maxLength); // Limita o tamanho da mensagem\n\n    if (!message) return;\n    if (!webScoket1.checkConnection()) {\n      webScoket1.connectWebSocket();\n    }\n    if (!webScoket2.checkConnection()) {\n      webScoket2.connectWebSocket();\n    }\n    if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n      setConnect(false);\n    } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n      setConnect(true);\n    }\n    webScoket1.send(`/sendMessage ${isAuthenticated} ${selectedUser} ${message}`);\n    webScoket2.send(`/sendMessage ${isAuthenticated} ${selectedUser} ${message}`);\n    reset();\n  };\n  const openNotificationWithIcon = useCallback((type, message, description) => {\n    api[type]({\n      message,\n      description\n    });\n  }, [api]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      if (!webScoket1.checkConnection()) {\n        webScoket1.connectWebSocket();\n      }\n      if (!webScoket2.checkConnection()) {\n        webScoket2.connectWebSocket();\n      }\n      if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n        setConnect(false);\n      } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n        setConnect(true);\n      }\n      webScoket1.send('/getAll ' + isAuthenticated);\n      webScoket2.send('/getAll ' + isAuthenticated);\n    }, 100);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [webScoket1, webScoket2, navigate, isAuthenticated, openNotificationWithIcon, setConnect, isServersConnected]);\n  const handleWebSocketMessage = useCallback(newMsg => {\n    if (newMsg.status === 'error') {\n      openNotificationWithIcon('error', 'Erro', newMsg.data);\n      return;\n    } else if (typeof newMsg.data === 'string') {\n      return;\n    }\n    try {\n      newMsg = newMsg.data;\n      if (!selectedUser) {\n        return;\n      }\n      setMessages(newMsg[selectedUser] || []);\n    } catch (error) {}\n  }, [setMessages, selectedUser, openNotificationWithIcon]);\n  useEffect(() => {\n    if (webScoket1.receivedMessages) {\n      handleWebSocketMessage(webScoket1.receivedMessages);\n    }\n  }, [webScoket1.receivedMessages, handleWebSocketMessage]);\n  useEffect(() => {\n    if (webScoket2.receivedMessages) {\n      handleWebSocketMessage(webScoket2.receivedMessages);\n    }\n  }, [webScoket2.receivedMessages, handleWebSocketMessage]);\n\n  // const message = watch(\"message\", \"\");\n\n  // Formata o timestamp da mensagem\n  const formatTimestamp = (timestamp, prevTimestamp) => {\n    const date = parseISO(timestamp);\n    let formattedDate = '';\n    if (isToday(date)) {\n      formattedDate = format(date, 'HH:mm');\n    } else if (isYesterday(date)) {\n      if (!prevTimestamp || !isYesterday(parseISO(prevTimestamp))) {\n        formattedDate = 'Ontem ' + format(date, 'HH:mm');\n      } else {\n        formattedDate = format(date, 'HH:mm');\n      }\n    } else {\n      if (!prevTimestamp || format(parseISO(prevTimestamp), 'yyyy-MM-dd') !== format(date, 'yyyy-MM-dd')) {\n        formattedDate = format(date, 'dd/MM/yyyy HH:mm');\n      } else {\n        formattedDate = format(date, 'HH:mm');\n      }\n    }\n    return formattedDate;\n  };\n\n  // Rola para o final do contêiner de mensagens\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Verifica a posição de rolagem ao montar o componente\n    const container = (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.parentElement;\n    if (container) {\n      const handleScroll = () => {\n        if (container.scrollTop + container.clientHeight < container.scrollHeight - 20) {\n          setIsScrolledUp(true);\n        } else {\n          setIsScrolledUp(false);\n        }\n      };\n      container.addEventListener('scroll', handleScroll);\n      return () => container.removeEventListener('scroll', handleScroll);\n    }\n  }, [messagesEndRef]);\n  useEffect(() => {\n    if (!isScrolledUp) {\n      scrollToBottom();\n    }\n  }, [messages, isScrolledUp]);\n\n  // Conta caracteres visíveis removendo emojis\n  const countVisibleCharacters = str => {\n    const regex = emojiRegex();\n    return str.replace(regex, '').length;\n  };\n\n  // Adiciona emoji ao campo de mensagem\n  const handleEmojiClick = emoji => {\n    setValue('msgToSend', msgToSend + emoji.emoji);\n    setShowEmojiPicker(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-3/4 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 overflow-auto\",\n      children: [messages && messages.map((message, id) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [message.sender === isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3/4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: `mb-2 p-2 rounded-lg w-1/4 ${message.sender === isAuthenticated ? 'bg-primary text-white self-end' : 'bg-white self-start'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-md\",\n            children: message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500\",\n            children: formatTimestamp(message.timestamp, id > 0 ? messages[id - 1].timestamp || '' : '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"p-4 bg-white\",\n      onSubmit: handleSubmit(handleSendMessage),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setShowEmojiPicker(!showEmojiPicker),\n          className: \"px-2 py-1 bg-gray-200 rounded-lg hover:bg-gray-300 focus:outline-none\",\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute z-10 bottom-5\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(EmojiPicker, {\n            onEmojiClick: handleEmojiClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"msgToSend\",\n          control: control,\n          defaultValue: \"\",\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(\"input\", {\n            ...field,\n            className: \"flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\",\n            placeholder: \"Digite sua mensagem\",\n            maxLength: 85\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 bg-primary text-white rounded-lg hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-primary\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-2\",\n        children: [countVisibleCharacters(msgToSend), \"/85 caracteres\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatArea, \"6kI3Vw0CmR90UdQWmj+gyBJ4Eyc=\", false, function () {\n  return [useAuth, useForm, useNavigate, useWebSocket, useWebSocket];\n});\n_c = ChatArea;\nexport default ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["format","isToday","isYesterday","parseISO","React","useCallback","useEffect","useRef","useState","useAuth","Controller","useForm","useWebSocket","Col","Row","emojiRegex","EmojiPicker","useNavigate","jsxDEV","_jsxDEV","ChatArea","selectedUser","api","_s","isAuthenticated","isServersConnected","setConnect","control","handleSubmit","reset","watch","setValue","navigate","messages","setMessages","webScoket1","process","env","REACT_APP_API_URL1","webScoket2","REACT_APP_API_URL2","messagesEndRef","isScrolledUp","setIsScrolledUp","showEmojiPicker","setShowEmojiPicker","msgToSend","handleSendMessage","data","maxLength","message","slice","checkConnection","connectWebSocket","send","openNotificationWithIcon","type","description","interval","setInterval","clearInterval","handleWebSocketMessage","newMsg","status","error","receivedMessages","formatTimestamp","timestamp","prevTimestamp","date","formattedDate","scrollToBottom","current","scrollIntoView","behavior","_messagesEndRef$curre","container","parentElement","handleScroll","scrollTop","clientHeight","scrollHeight","addEventListener","removeEventListener","countVisibleCharacters","str","regex","replace","length","handleEmojiClick","emoji","className","children","map","id","sender","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","onClick","onEmojiClick","name","defaultValue","render","field","placeholder","_c","$RefreshReg$"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/containers/ChatArea/index.tsx"],"sourcesContent":["import { format, isToday, isYesterday, parseISO, set } from 'date-fns';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { Controller, useForm } from 'react-hook-form';\nimport useWebSocket from '../../api';\nimport { Col, Row } from 'antd';\nimport emojiRegex from 'emoji-regex';\nimport EmojiPicker from 'emoji-picker-react';\nimport { useNavigate } from 'react-router-dom';\nimport { NotificationType } from '../../common/notificationType';\nimport { NotificationInstance } from 'antd/es/notification/interface';\n\ninterface ChatAreaProps {\n  selectedUser: string;\n  api: NotificationInstance;\n}\ninterface Messages {\n  [key: string]: Message[];\n}\ninterface Message {\n  sender: string;\n  message: string;\n  timestamp: string;\n}\n\nconst ChatArea: React.FC<ChatAreaProps> = ({ selectedUser, api }) => {\n  const { isAuthenticated, isServersConnected, setConnect } = useAuth();\n  const { control, handleSubmit, reset, watch, setValue } = useForm<{ msgToSend: string }>();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const webScoket1= useWebSocket( process.env.REACT_APP_API_URL1 as string);\n  const webScoket2 = useWebSocket( process.env.REACT_APP_API_URL2 as string);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [isScrolledUp, setIsScrolledUp] = useState(false);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const msgToSend = watch(\"msgToSend\", \"\");\n\n  // Limita o tamanho da mensagem e envia\n  const handleSendMessage = (data: { msgToSend: string }) => {\n    const maxLength = 85;\n    const message = data.msgToSend.slice(0, maxLength); // Limita o tamanho da mensagem\n\n    if (!message) return;\n    if (!webScoket1.checkConnection()){\n      webScoket1.connectWebSocket();\n    }\n    if (!webScoket2.checkConnection()){\n      webScoket2.connectWebSocket();\n    }\n\n    if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n      setConnect(false);\n    } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n      setConnect(true)\n    }\n    webScoket1.send(`/sendMessage ${isAuthenticated} ${selectedUser} ${message}`);\n    webScoket2.send(`/sendMessage ${isAuthenticated} ${selectedUser} ${message}`);\n    reset();\n  };\n\n  const openNotificationWithIcon = useCallback(\n    (type: NotificationType, message: string, description: string) => {\n      api[type]({\n        message,\n        description,\n      });\n    },\n    [api]\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!isAuthenticated) {\n        navigate('/');\n      }\n      if (!webScoket1.checkConnection()){\n        webScoket1.connectWebSocket();\n      }\n      if (!webScoket2.checkConnection()){\n        webScoket2.connectWebSocket();\n      }\n\n      if (!webScoket1.checkConnection() && !webScoket2.checkConnection() && isServersConnected) {\n        setConnect(false);\n      } else if ((webScoket1.checkConnection() || webScoket2.checkConnection()) && !isServersConnected) {\n        setConnect(true)\n      }\n      webScoket1.send('/getAll ' + isAuthenticated);\n      webScoket2.send('/getAll ' + isAuthenticated);\n    }, 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [webScoket1, webScoket2, navigate, isAuthenticated, openNotificationWithIcon, setConnect, isServersConnected]);\n\n  \n\n  const handleWebSocketMessage = useCallback(\n    (newMsg: any) => {\n      if (newMsg.status === 'error') {\n        openNotificationWithIcon('error', 'Erro', newMsg.data);\n        return;\n      } else if (typeof newMsg.data === 'string') {\n        return;\n      }\n\n      try {\n        newMsg = newMsg.data as Messages;\n        if (!selectedUser) {\n          return;\n        }\n        \n        setMessages(newMsg[selectedUser] || []);\n      } catch (error) {\n      }\n    },\n    [setMessages, selectedUser, openNotificationWithIcon]\n  );\n\n  useEffect(() => {\n    if (webScoket1.receivedMessages) {\n      handleWebSocketMessage(webScoket1.receivedMessages);\n    }\n  }, [webScoket1.receivedMessages, handleWebSocketMessage]);\n\n  useEffect(() => {\n    if (webScoket2.receivedMessages) {\n      handleWebSocketMessage(webScoket2.receivedMessages);\n    }\n  }, [webScoket2.receivedMessages, handleWebSocketMessage]);\n\n  \n\n  // const message = watch(\"message\", \"\");\n\n  // Formata o timestamp da mensagem\n  const formatTimestamp = (timestamp: string, prevTimestamp: string) => {\n    const date = parseISO(timestamp);\n    let formattedDate = '';\n\n    if (isToday(date)) {\n      formattedDate = format(date, 'HH:mm');\n    } else if (isYesterday(date)) {\n      if (!prevTimestamp || !isYesterday(parseISO(prevTimestamp))) {\n        formattedDate = 'Ontem ' + format(date, 'HH:mm');\n      } else {\n        formattedDate = format(date, 'HH:mm');\n      }\n    } else {\n      if (!prevTimestamp || format(parseISO(prevTimestamp), 'yyyy-MM-dd') !== format(date, 'yyyy-MM-dd')) {\n        formattedDate = format(date, 'dd/MM/yyyy HH:mm');\n      } else {\n        formattedDate = format(date, 'HH:mm');\n      }\n    }\n\n    return formattedDate;\n  };\n\n  // Rola para o final do contêiner de mensagens\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    // Verifica a posição de rolagem ao montar o componente\n    const container = messagesEndRef.current?.parentElement;\n    if (container) {\n      const handleScroll = () => {\n        if (container.scrollTop + container.clientHeight < container.scrollHeight - 20) {\n          setIsScrolledUp(true);\n        } else {\n          setIsScrolledUp(false);\n        }\n      };\n\n      container.addEventListener('scroll', handleScroll);\n      return () => container.removeEventListener('scroll', handleScroll);\n    }\n  }, [messagesEndRef]);\n\n  useEffect(() => {\n    if (!isScrolledUp) {\n      scrollToBottom();\n    }\n  }, [messages, isScrolledUp]);\n\n  // Conta caracteres visíveis removendo emojis\n  const countVisibleCharacters = (str: string) => {\n    const regex = emojiRegex();\n    return str.replace(regex, '').length;\n  };\n\n  // Adiciona emoji ao campo de mensagem\n  const handleEmojiClick = (emoji: any) => {\n    setValue('msgToSend', msgToSend + emoji.emoji);\n    setShowEmojiPicker(false);\n  };\n\n  return (\n    <div className=\"flex flex-col w-3/4 bg-gray-100\">\n      <div className=\"flex-1 p-4 overflow-auto\">\n        {messages && messages.map((message, id) => (\n          <Row key={id}>\n            {message.sender === isAuthenticated && <div className='w-3/4'></div>}\n            <Col\n              className={`mb-2 p-2 rounded-lg w-1/4 ${message.sender === isAuthenticated ? 'bg-primary text-white self-end' : 'bg-white self-start'}`}\n            >\n              <div className=\"text-sm text-gray-600\">{message.sender}</div>\n              <div className=\"text-md\">{message.message}</div>\n              <div className=\"text-xs text-gray-500\">\n                {formatTimestamp(message.timestamp, id > 0 ? messages[id - 1].timestamp || '' : '')}\n              </div>\n            </Col>\n          </Row>\n        ))}\n\n        {/* Referência para o final do contêiner de mensagens */}\n        <div ref={messagesEndRef} />\n      </div>\n      <form className=\"p-4 bg-white\" onSubmit={handleSubmit(handleSendMessage)}>\n        <div className=\"flex items-center space-x-4\">\n          <button\n            type=\"button\"\n            onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n            className=\"px-2 py-1 bg-gray-200 rounded-lg hover:bg-gray-300 focus:outline-none\"\n          >\n            😊\n          </button>\n          {showEmojiPicker && (\n            <div className=\"absolute z-10 bottom-5\"> {/* Wrapper para posicionar o Emoji Picker */}\n              <EmojiPicker onEmojiClick={handleEmojiClick} />\n            </div>\n          )}\n          <Controller\n            name=\"msgToSend\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <input\n                {...field}\n                className=\"flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary\"\n                placeholder=\"Digite sua mensagem\"\n                maxLength={85}\n              />\n            )}\n          />\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-primary text-white rounded-lg hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-primary\"\n          >\n            Enviar\n          </button>\n        </div>\n        <p className=\"text-sm text-gray-600 mt-2\">{countVisibleCharacters(msgToSend)}/85 caracteres</p>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatArea;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}