{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/repos/chat/chat-webapp/src/containers/SideBar/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useWebSocket from '../../api';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  friends,\n  getFriends,\n  openNotificationWithIcon\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    send,\n    receivedMessages\n  } = useWebSocket('ws://localhost:8080');\n  const {\n    isAuthenticated\n  } = useAuth();\n  const inputRef = useRef(null);\n  const handleAddFriend = username => {\n    send(`/addFriend ${isAuthenticated} ${username}`);\n  };\n  const handleWebSocketMessage = useCallback(message => {\n    console.log('Mensagem recebidaaaa:', message);\n    if (message === 'success') {\n      openNotificationWithIcon('success', 'Amigo Adicionado', 'Amigo adicionado com sucesso!');\n    } else if (message === 'error') {\n      openNotificationWithIcon('error', 'Erro', 'Usuário não encontrado.');\n    } else {\n      openNotificationWithIcon('error', 'Erro', 'Erro ao adicionar amigo.');\n    }\n  }, [openNotificationWithIcon]);\n  useEffect(() => {\n    if (receivedMessages) {\n      handleWebSocketMessage(receivedMessages);\n    }\n  }, [receivedMessages, handleWebSocketMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-lightGray p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Amigos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: !!friends && friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-2 bg-white rounded-lg shadow\",\n          children: friend\n        }, friend, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome do amigo\",\n        className: \"w-full px-4 py-2 bg-white rounded-lg shadow mb-2\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full px-4 py-2 bg-primary text-white rounded-lg hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-primary\",\n        onClick: () => {\n          var _inputRef$current;\n          const username = (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value.trim();\n          if (username) {\n            handleAddFriend(username);\n          } else {\n            openNotificationWithIcon('error', 'Erro', 'Digite um nome de usuário.');\n          }\n        },\n        children: \"Adicionar Amigo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"ArljMbmBKqwR+tSnCpVNtVbYmf0=\", false, function () {\n  return [useNavigate, useWebSocket, useAuth];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useNavigate","useWebSocket","useAuth","jsxDEV","_jsxDEV","Sidebar","friends","getFriends","openNotificationWithIcon","_s","navigate","send","receivedMessages","isAuthenticated","inputRef","handleAddFriend","username","handleWebSocketMessage","message","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","friend","type","placeholder","ref","onClick","_inputRef$current","current","value","trim","_c","$RefreshReg$"],"sources":["/home/eduardo/repos/chat/chat-webapp/src/containers/SideBar/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { NotificationType } from '../../common/notificationType';\nimport useWebSocket from '../../api';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface SidebarProps {\n  friends: string[] | undefined;\n  getFriends: () => void;\n  openNotificationWithIcon: (type: NotificationType, message: string, description: string) => void;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ friends, getFriends, openNotificationWithIcon }) => {\n  const navigate = useNavigate();\n  const { send, receivedMessages } = useWebSocket('ws://localhost:8080');\n  const { isAuthenticated } = useAuth();\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleAddFriend = (username: string) => {\n    send(`/addFriend ${isAuthenticated} ${username}`);\n  };\n\n  const handleWebSocketMessage = useCallback(\n    (message: any) => {\n      console.log('Mensagem recebidaaaa:', message);\n      if (message === 'success') {\n        openNotificationWithIcon('success', 'Amigo Adicionado', 'Amigo adicionado com sucesso!');\n      } else if (message === 'error') {\n        openNotificationWithIcon('error', 'Erro', 'Usuário não encontrado.');\n      } else {\n        openNotificationWithIcon('error', 'Erro', 'Erro ao adicionar amigo.');\n      }\n    },\n    [openNotificationWithIcon]\n  );\n\n  useEffect(() => {\n    if (receivedMessages) {\n      handleWebSocketMessage(receivedMessages);\n    }\n  }, [receivedMessages, handleWebSocketMessage]);\n\n  return (\n    <div className=\"flex flex-col h-full bg-lightGray p-4\">\n      <div className=\"flex-grow\">\n        <h2 className=\"text-2xl font-bold mb-4\">Amigos</h2>\n        <ul className=\"space-y-2\">\n          {!!friends && friends.map((friend) => (\n            <li key={friend} className=\"p-2 bg-white rounded-lg shadow\">\n              {friend}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"mt-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Nome do amigo\"\n          className=\"w-full px-4 py-2 bg-white rounded-lg shadow mb-2\"\n          ref={inputRef}\n        />\n        <button\n          className=\"w-full px-4 py-2 bg-primary text-white rounded-lg hover:bg-green-500 focus:outline-none focus:ring-2 focus:ring-primary\"\n          onClick={() => {\n            const username = inputRef.current?.value.trim();\n            if (username) {\n              handleAddFriend(username);\n            } else {\n              openNotificationWithIcon('error', 'Erro', 'Digite um nome de usuário.');\n            }\n          }}\n        >\n          Adicionar Amigo\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}